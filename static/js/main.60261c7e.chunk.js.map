{"version":3,"sources":["Component/CourseList.js","Component/CourseForm.js","App.js","reportWebVitals.js","index.js"],"names":["Courselist","state","isEdit","rendercourse","props","details","name","onClick","toggle","deletecourse","index","setState","Updatecourseitem","e","preventDefault","Editcourse","input","value","Editform","onSubmit","type","ref","v","defaultValue","this","Component","CourseForm","addcourse","onChange","updatecourse","current","required","App","Courses","target","courses","push","splice","newvalue","courselist","map","course","className","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA8CeA,E,4MA5CbC,MAAM,CACJC,QAAQ,G,EAGVC,aAAa,WACX,OACE,+BACI,qCAAQ,EAAKC,MAAMC,QAAQC,QAC3B,wBAAQC,QAAS,WAAK,EAAKC,UAA3B,0BACA,wBAAQD,QAAS,WAAK,EAAKH,MAAMK,aAAa,EAAKL,MAAMM,QAAzD,+B,EAKRF,OAAQ,WACN,IAAKN,EAAQ,EAAKD,MAAbC,OACL,EAAKS,SAAS,CACZT,QAASA,K,EAIbU,iBAAiB,SAACC,GAChBA,EAAEC,iBACF,EAAKV,MAAMW,WAAW,EAAKX,MAAMM,MAAO,EAAKM,MAAMC,OACnD,EAAKT,U,EAGPU,SAAS,WACP,OACE,uBAAMC,SAAU,EAAKP,iBAArB,UACE,uBAAOQ,KAAK,OAAOC,IAAK,SAACC,GAAK,EAAKN,MAAMM,GAAIC,aAAc,EAAKnB,MAAMC,QAAQC,OAC9E,uD,4CAIN,WACE,IAAKJ,EAASsB,KAAKvB,MAAdC,OACL,OACE,cAAC,WAAD,UACKA,EAASsB,KAAKN,WAAYM,KAAKrB,qB,GAxCjBsB,aCQVC,EARI,SAACtB,GAChB,OACI,uBAAMe,SAAUf,EAAMuB,UAAtB,UACI,uBAAOP,KAAK,OAAOQ,SAAUxB,EAAMyB,aAAcZ,MAAOb,EAAM0B,QAASC,UAAQ,IAC/E,wBAAQX,KAAK,SAAb,4BCyDGY,E,4MA1Db/B,MAAO,CACLgC,QAAQ,CACN,CAAC3B,KAAM,QACP,CAACA,KAAM,OACP,CAACA,KAAM,WAETwB,QAAS,I,EAEXD,aAAa,SAAChB,GACZ,EAAKF,SAAS,CACZmB,QAAQjB,EAAEqB,OAAOjB,S,EAGrBU,UAAU,SAACd,GACTA,EAAEC,iBACF,IAAIgB,EAAS,EAAK7B,MAAM6B,QACpBK,EAAU,EAAKlC,MAAMgC,QACzBE,EAAQC,KAAK,CAAC9B,KAAMwB,IACpB,EAAKnB,SAAS,CACZwB,UACAL,QAAQ,M,EAGZrB,aAAa,SAACC,GACZ,IAAIyB,EAAU,EAAKlC,MAAMgC,QACzBE,EAAQE,OAAO3B,EAAM,GACrB,EAAKC,SAAS,CACZwB,a,EAGJpB,WAAW,SAACL,EAAO4B,GACf,IAAIH,EAAU,EAAKlC,MAAMgC,QACZE,EAAQzB,GACf,KAAU4B,EAChB,EAAK3B,SAAS,CACZwB,a,4CAGN,WAAS,IAAD,OAEAI,EADYf,KAAKvB,MAAhBgC,QACoBO,KAAI,SAACC,EAAQ/B,GACtC,OAAO,cAAC,EAAD,CAAYL,QAASoC,EAAoB/B,MAAOA,EACzCD,aAAc,EAAKA,aAAcM,WAAY,EAAKA,YADvBL,MAG3C,OACE,0BAASgC,UAAU,MAAnB,UACE,4CACA,cAAC,EAAD,CACEb,aAAcL,KAAKK,aACnBF,UAAWH,KAAKG,UAChBG,QAASN,KAAKvB,MAAM6B,UACtB,6BACGN,KAAKvB,MAAMgC,QAAQU,OAAS,EAAIJ,EAAa,qF,GArDtCd,aCSHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.60261c7e.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nclass Courselist extends Component {\r\n  state={\r\n    isEdit: false\r\n  }\r\n  //render course items\r\n  rendercourse=()=>{\r\n    return(\r\n      <li>\r\n          <span> {this.props.details.name}</span>\r\n          <button onClick={()=>{this.toggle()}}>Edit Courses</button>\r\n          <button onClick={()=>{this.props.deletecourse(this.props.index)}}>Delete Course</button>\r\n      </li>\r\n    )\r\n  }\r\n  //toggle state\r\n  toggle =()=>{\r\n    let {isEdit}=this.state;\r\n    this.setState({\r\n      isEdit: !isEdit\r\n    })\r\n  }\r\n  //Updatecourseitem after edit\r\n  Updatecourseitem=(e)=>{\r\n    e.preventDefault();\r\n    this.props.Editcourse(this.props.index, this.input.value);\r\n    this.toggle();\r\n  }\r\n  //Edit Form\r\n  Editform=()=>{\r\n    return(\r\n      <form onSubmit={this.Updatecourseitem}>\r\n        <input type=\"text\" ref={(v)=>{this.input=v}} defaultValue={this.props.details.name} />\r\n        <button>Update Course</button>\r\n      </form>\r\n    )\r\n  }\r\n  render(){\r\n    let {isEdit}= this.state;\r\n    return (\r\n      <Fragment>\r\n          {isEdit ? this.Editform(): this.rendercourse()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Courselist;","import React from 'react';\r\nconst CourseForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.addcourse}>\r\n            <input type=\"text\" onChange={props.updatecourse} value={props.current} required/>\r\n            <button type=\"submit\">Add Course</button>\r\n        </form>\r\n    )\r\n}\r\nexport default CourseForm","import React, {Component} from 'react';\nimport Courselist from './Component/CourseList';\nimport CourseForm from './Component/CourseForm';\nclass App extends Component {\n  state ={\n    Courses:[\n      {name: \"HTML\"},\n      {name: \"Css\"},\n      {name: \"jQuery\"}\n    ],\n    current: ''\n  }\n  updatecourse=(e)=>{\n    this.setState({\n      current:e.target.value\n    })\n  }\n  addcourse=(e)=>{\n    e.preventDefault();\n    let current= this.state.current;\n    let courses = this.state.Courses;\n    courses.push({name: current})\n    this.setState({\n      courses,\n      current:''\n    })\n  }\n  deletecourse=(index)=>{\n    let courses = this.state.Courses;\n    courses.splice(index,1);\n    this.setState({\n      courses\n    })\n  }\n  Editcourse=(index, newvalue)=>{\n      let courses = this.state.Courses;\n      let course = courses[index]\n      course[\"name\"] =newvalue;\n      this.setState({\n        courses\n      })\n  }\n  render(){\n    const {Courses} = this.state;\n    const courselist = Courses.map((course, index) =>{\n      return <Courselist details={course} key={index} index={index} \n                    deletecourse={this.deletecourse} Editcourse={this.Editcourse}/>\n    })\n    return (\n      <section className=\"App\">\n        <h2>Add Course</h2>\n        <CourseForm \n          updatecourse={this.updatecourse}\n          addcourse={this.addcourse} \n          current={this.state.current} />\n        <ul>\n          {this.state.Courses.length > 0 ? courselist : <p>No Courses To Show!! Please Add New Course.</p>}\n        </ul>\n      </section>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}